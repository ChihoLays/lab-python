# Q1
# def time24hourTo12hour(time):
#     hr,miniu = time.split(":")
#     hr = int(hr)
#     if 12 < hr < 24:
#         return f"{hr%12}:{miniu} PM"
#     else:
#         return f"{hr}:{miniu} AM"
# print(time24hourTo12hour("23:24"))

# Q2

# new_jan = ['27', '28', '29', '30', '31','','',
#            '20', '21', '22', '23', '24', '25', '26',
#            '13', '14', '15', '16', '17', '18', '19',
#            '6', '7', '8', '9', '10', '11', '12',
#            "","",'1', '2', '3', '4', '5']
# new_feb = [ '24', '25', '26','27', '28', '29',"",
#             '17', '18', '19','20', '21', '22','23',
#             '10', '11', '12','13', '14', '15','16',
#             '3', '4', '5', '6', '7', '8','9',
#             '','','','','','1','2']
# new_mar = ['30', '31','','','','','',
#            '23', '24', '25', '26','27', '28', '29',
#            '16', '17', '18', '19','20', '21', '22',
#             '9','10', '11', '12','13', '14', '15',
#            '2', '3', '4', '5','6','7', '8',
#            '','','','','','','1' ]
# 
# new_apr = ['27', '28', '29', '30', '','','',
#            '20', '21', '22', '23', '24', '25', '26',
#            '13', '14', '15', '16', '17', '18', '19',
#            '6', '7', '8', '9', '10', '11', '12',
#            "","",'1', '2', '3', '4', '5']
# new_may = ['25', '26','27', '28', '29',"30",'31',
#             '18', '19','20', '21', '22','23','24',
#             '11', '12','13', '14', '15','16','17',
#             '4', '5', '6', '7', '8', '9','10',
#             '','','','','1','2','3']
# new_jun = ['29', '30','','','','','',
#            '22','23', '24', '25', '26','27', '28',
#            '15','16', '17', '18', '19','20', '21',
#             '8','9','10', '11', '12','13', '14',
#            '1','2', '3', '4', '5','6','7']
# new_jul = ['27', '28', '29', '30', '31','','',
#            '20', '21', '22', '23', '24', '25', '26',
#            '13', '14', '15', '16', '17', '18', '19',
#            '6', '7', '8', '9', '10', '11', '12',
#            "","",'1', '2', '3', '4', '5']
# new_aug = ['','','','','','','31',
#            '24', '25', '26','27', '28', '29',"30",
#             '17', '18', '19','20', '21', '22','23',
#             '10', '11', '12','13', '14', '15','16',
#             '3', '4', '5', '6', '7', '8','9',
#             '','','','','','1','2']
# new_sep = ['28', '29', '30', '','','','',
#            '21', '22', '23', '24', '25', '26','27',
#            '14', '15', '16', '17', '18', '19','20',
#            '7', '8', '9', '10', '11', '12','13',
#            "",'1', '2', '3', '4', '5','6']
# new_oct = ['26','27','28', '29', '30', '31','',
#            '19','20', '21', '22', '23', '24', '25',
#            '12', '13', '14', '15', '16', '17', '18',
#            '5','6', '7', '8', '9', '10', '11',
#            "","",'','1', '2', '3', '4']
# new_nov = ['30', '','','','','','',
#            '23', '24', '25', '26','27', '28', '29',
#            '16', '17', '18', '19','20', '21', '22',
#             '9','10', '11', '12','13', '14', '15',
#            '2', '3', '4', '5','6','7', '8',
#            '','','','','','','1' ]
# new_dec = [ '28', '29', '30', '31','','','',
#            '21', '22', '23', '24', '25', '26','27',
#            '14', '15', '16', '17', '18', '19','20',
#             '7', '8', '9', '10', '11', '12',"13",
#            "",'1', '2', '3', '4', '5','6']

from turtle import *

# screen size [-620,620] x [-300,300] 
# estimate of each date: 20 x 20
def sq(n):
    for i in range(4):
        fd(n)
        left(90)
def calender(list_m):
    day = ["Mon","Tu","We","Th","Fr","Sa","Su"]
    for i in range(len(list_m)):
        if i % 7 == 0 and i != 0 :
            left(180)
            fd(25 * 7)
            right(90)
            fd(25)
            right(90)
        sq(25)
        fd(4)
        write(list_m[i], font=("Angsana New", 18, "normal"))
        fd(21)
    left(180)
    fd(25 * 7)
    right(90)
    fd(25)
    right(90)
    for i in range(len(day)):
        if i % 7 == 0 and i != 0 :
            left(180)
            fd(25 * 7)
            right(90)
            fd(25)
            right(90)
        sq(25)
        fd(4)
        if i == 0:
            write(day[i], font=("Angsana New", 12, "normal"))
            fd(21)
            continue
        write(day[i], font=("Angsana New", 16, "normal"))
        fd(21)
    left(180)
    fd(25 * 7)
    right(90)
    fd(25)
    right(90)


def calender_of_2020(n):
    date = {1: ['26', '27', '28', '29', '30', '31', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                '', '', '', '1', '2', '3', '4'],
            2: ['23', '24', '25', '26', '27', '28', '29',
                '16', '17', '18', '19', '20', '21', '22',
                '9', '10', '11', '12', '13', '14', '15',
                '2', '3', '4', '5', '6', '7', '8',
                '', '', '', '', '', '', '1'],
            3: ['29', '30', '31', '', '', '', '',
                '22', '23', '24', '25', '26', '27', '28',
                '15', '16', '17', '18', '19', '20', '21',
                '8', '9', '10', '11', '12', '13', '14',
                '1', '2', '3', '4', '5', '6', '7'],
            4: ["26", '27', '28', '29', '30', '', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                "", '', '', '1', '2', '3', '4'],
            5: ['31', '', '', '', '', '', '',
                "24", '25', '26', '27', '28', '29', '30',
                '17', '18', '19', '20', '21', '22', '23',
                '10', '11', '12', '13', '14', '15', '16',
                '3', '4', '5', '6', '7', '8', '9',
                '', '', '', '', '', '1', '2', ],
            6: ["28", '29', '30', '', '', '', '',
                '21', '22', '23', '24', '25', '26', '27',
                '14', '15', '16', '17', '18', '19', '20',
                '7', '8', '9', '10', '11', '12', '13',
                '', '1', '2', '3', '4', '5', '6'],
            7: ['26', '27', '28', '29', '30', '31', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                '', '', '', '1', '2', '3', '4'],
            8: ['30', '31', '', '', '', '', '',
                '23', '24', '25', '26', '27', '28', '29',
                '16', '17', '18', '19', '20', '21', '22',
                '9', '10', '11', '12', '13', '14', '15',
                '2', '3', '4', '5', '6', '7', '8',
                '', '', '', '', '', '', '1'],
            9: ['27', '28', '29', '30', '', '', '',
                '20', '21', '22', '23', '24', '25', '26',
                '13', '14', '15', '16', '17', '18', '19',
                '6', '7', '8', '9', '10', '11', '12', '',
                '', '1', '2', '3', '4', '5'],
            10: ['25', '26', '27', '28', '29', '30', '31',
                 '18', '19', '20', '21', '22', '23', '24',
                 '11', '12', '13', '14', '15', '16', '17',
                 '4', '5', '6', '7', '8', '9', '10',
                 '', '', '', '', '1', '2', '3'],
            11: ['25', '26', '27', '28', '29', '30', '31',
                 '18', '19', '20', '21', '22', '23', '24',
                 '11', '12', '13', '14', '15', '16', '17',
                 '4', '5', '6', '7', '8', '9', '10',
                 '', '', '', '', '1', '2', '3'],
            12: ['27', '28', '20', '30', '31', '', '',
                 '20', '21', '22', '23', '24', '25', '26',
                 '13', '14', '15', '16', '17', '18', '19',
                 '6', '7', '8', '9', '10', '11', '12',
                 '', '', '1', '2', '3', '4', '5']}
    calender(date[n])
    for i in range(2):
        fd(25 * 7)
        left(90)
        fd(25)
        left(90)
    fd(10)
    write(f"Month#{n}", font=("Angsana New", 16, "normal"))
    fd(-10)
    right(90)
    fd(25 * ((len(date[n])//7)+1))
    left(90)
x = -600
y = -280
count = 0
month = 9
speed(0)
penup()
goto(x, y)
pendown()
h = 0
w = 0
while count != 12:
    if count == 4:
        month = 5
    elif count == 8:
        y+= 20
        month = 1
    if w == 4:
        w = 0
        y += 200
        penup()
        goto(x, y)
        pendown()
    calender_of_2020(month)
    fd(25*7)
    penup()
    fd(60)
    pendown()
    month += 1
    w += 1
    count += 1
done()


# Q3

# Q4
# def readmaxhundred(n):
#     ones = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']
#     teen = ['ten','eleven', 'twelve', 'thirteen', 'fourteen', 'fivteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen']
#     ten = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety']
#     if n < 0 or n >= 1000:
#         return "I don't know."
#     elif n == 0:
#         return "Zero"
#     if 1 < n < 10:
#         return ones[n-1].capitalize()
#     elif 10 <= n < 20:
#         return teen[n%10].capitalize()
#     elif 20 <= n < 100:
#         if n % 10 != 0:
#             return f"{ten[(n // 10) - 2]}-{ones[n % 10 - 1]}".capitalize()
#         else:
#             return ten[(n // 10) - 2].capitalize()
#     elif 100 <= n <= 999:
#         if n % 100 == 0: #only hundred
#             return f"{ones[(n//100)-1]} hundred".capitalize()
#         else:
#             if n % 100 < 10:  # less than 10
#                 return f"{ones[(n // 100) - 1]} hundred and {ones[(n % 100) - 1]}".capitalize()
#             elif 10 <= (n % 100) < 20:  # Teen
#                 return f"{ones[(n // 100) - 1]} hundred and {teen[(n % 10)]}".capitalize()
#             elif (n % 10) == 0: #
#                 return f"{ones[(n // 100) - 1]} hundred and {ten[((n % 100) // 10) - 2]}".capitalize()
#             elif 20 <= (n%100) < 100:
#                 return f"{ones[(n // 100) - 1]} hundred and {ten[((n%100) // 10) - 2]}-{ones[n % 10 - 1]}".capitalize()
#
# print(readmaxhundred(375))

#Q5
# try:
#     notes = [1000, 500, 100, 50, 20, 2, 1]
#     am_notes = []
#     money = input("Enter a integer: ")
#     if money.isalpha():
#         raise TypeError("Wrong type of info!")
#     money = int(money)
#     if money < 0:
#         raise ValueError("Invalid amount!")
#     for i in range(len(notes)):
#         if i < 5:
#             print(f"{notes[i]}-Bath notes: {money // notes[i]}")
#         else:
#             print(f"{notes[i]}-Bath coins: {money // notes[i]}")
#         money %= notes[i]
# except Exception as err:
#     print(err)


#Q6
# def reverse(n):
#     n = str(n)
#     return  int(n[::-1])
# print(reverse(3456))

