#Q1

n = int(input("Input a number to find square root: "))
guess = n / 2
temp = n / guess
for i in range(1,8):
    for j in range(i):
        temp = n / guess
        guess = (guess + temp) / 2.0
    if i > 4:
        print(f"Loop {i} times: {temp:.3f}")
    
#Q2

from turtle import *

# screen size [-620,620] x [-300,300] 
# estimate of each date: 25 x 25
# space between date and the box
def sq(n):
    for i in range(4):
        fd(n)
        left(90)
def calender(list_m):
    day = ["Mon","Tu","We","Th","Fr","Sa","Su"]
    for i in range(len(list_m)):
        if i % 7 == 0 and i != 0 :
            left(180)
            fd(25 * 7)
            right(90)
            fd(25)
            right(90)
        sq(25)
        fd(4)
        write(list_m[i], font=("Angsana New", 18, "normal"))
        fd(21)
    left(180)
    fd(25 * 7)
    right(90)
    fd(25)
    right(90)
    for i in range(len(day)):
        if i % 7 == 0 and i != 0 :
            left(180)
            fd(25 * 7)
            right(90)
            fd(25)
            right(90)
        sq(25)
        fd(4)
        if i == 0:
            write(day[i], font=("Angsana New", 12, "normal"))
            fd(21)
            continue
        write(day[i], font=("Angsana New", 16, "normal"))
        fd(21)
    left(180)
    fd(25 * 7)
    right(90)
    fd(25)
    right(90)


def calender_of_2020(n):
    date = {1: ['26', '27', '28', '29', '30', '31', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                '', '', '', '1', '2', '3', '4'],
            2: ['23', '24', '25', '26', '27', '28', '29',
                '16', '17', '18', '19', '20', '21', '22',
                '9', '10', '11', '12', '13', '14', '15',
                '2', '3', '4', '5', '6', '7', '8',
                '', '', '', '', '', '', '1'],
            3: ['29', '30', '31', '', '', '', '',
                '22', '23', '24', '25', '26', '27', '28',
                '15', '16', '17', '18', '19', '20', '21',
                '8', '9', '10', '11', '12', '13', '14',
                '1', '2', '3', '4', '5', '6', '7'],
            4: ["26", '27', '28', '29', '30', '', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                "", '', '', '1', '2', '3', '4'],
            5: ['31', '', '', '', '', '', '',
                "24", '25', '26', '27', '28', '29', '30',
                '17', '18', '19', '20', '21', '22', '23',
                '10', '11', '12', '13', '14', '15', '16',
                '3', '4', '5', '6', '7', '8', '9',
                '', '', '', '', '', '1', '2', ],
            6: ["28", '29', '30', '', '', '', '',
                '21', '22', '23', '24', '25', '26', '27',
                '14', '15', '16', '17', '18', '19', '20',
                '7', '8', '9', '10', '11', '12', '13',
                '', '1', '2', '3', '4', '5', '6'],
            7: ['26', '27', '28', '29', '30', '31', '',
                '19', '20', '21', '22', '23', '24', '25',
                '12', '13', '14', '15', '16', '17', '18',
                '5', '6', '7', '8', '9', '10', '11',
                '', '', '', '1', '2', '3', '4'],
            8: ['30', '31', '', '', '', '', '',
                '23', '24', '25', '26', '27', '28', '29',
                '16', '17', '18', '19', '20', '21', '22',
                '9', '10', '11', '12', '13', '14', '15',
                '2', '3', '4', '5', '6', '7', '8',
                '', '', '', '', '', '', '1'],
            9: ['27', '28', '29', '30', '', '', '',
                '20', '21', '22', '23', '24', '25', '26',
                '13', '14', '15', '16', '17', '18', '19',
                '6', '7', '8', '9', '10', '11', '12', '',
                '', '1', '2', '3', '4', '5'],
            10: ['25', '26', '27', '28', '29', '30', '31',
                 '18', '19', '20', '21', '22', '23', '24',
                 '11', '12', '13', '14', '15', '16', '17',
                 '4', '5', '6', '7', '8', '9', '10',
                 '', '', '', '', '1', '2', '3'],
            11: ['25', '26', '27', '28', '29', '30', '31',
                 '18', '19', '20', '21', '22', '23', '24',
                 '11', '12', '13', '14', '15', '16', '17',
                 '4', '5', '6', '7', '8', '9', '10',
                 '', '', '', '', '1', '2', '3'],
            12: ['27', '28', '20', '30', '31', '', '',
                 '20', '21', '22', '23', '24', '25', '26',
                 '13', '14', '15', '16', '17', '18', '19',
                 '6', '7', '8', '9', '10', '11', '12',
                 '', '', '1', '2', '3', '4', '5']}
    calender(date[n])
    for i in range(2):
        fd(25 * 7)
        left(90)
        fd(25)
        left(90)
    fd(10)
    write(f"Month#{n}", font=("Angsana New", 16, "normal"))
    fd(-10)
    right(90)
    fd(25 * ((len(date[n])//7)+1))
    left(90)
x = -600
y = -280
count = 0
month = 9
speed(0)
penup()
goto(x, y)
pendown()
h = 0
w = 0
while count != 12:
    if count == 4:
        month = 5
    elif count == 8:
        y+= 20
        month = 1
    if w == 4:
        w = 0
        y += 200
        penup()
        goto(x, y)
        pendown()
    calender_of_2020(month)
    fd(25*7)
    penup()
    fd(60)
    pendown()
    month += 1
    w += 1
    count += 1
done()

#Q3

try:
    usin = int(input("Input: "))
    if (usin >= 1):
        if usin != 1:
            loop = usin
            for p in range(loop): # big loop per seq
                for i in range(1, usin + 1): # Ascending
                    for j in range(i):
                        print("*", end="")
                    print("")
                for i in range(usin - 1, 1, -1): # Descending
                    for j in range(i):
                        print("*", end="")
                    print("")
                usin -= 1
        print("*")
    else:
        raise ValueError
except TypeError:
    print("ERROR: Invalid type")
except ValueError:
    print("ERROR: Invalid amount")
